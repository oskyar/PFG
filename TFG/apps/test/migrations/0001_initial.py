# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-06 22:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('subject', '0001_initial'),
        ('question', '0001_initial'),
        ('topic', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('type', models.IntegerField(choices=[(0, 'Test normal'), (1, 'Test con cronómetro global'), (2, 'Test con tiempo por pregunta')], default=0)),
                ('type_question', models.IntegerField(choices=[(0, 'Una respuesta válida'), (1, 'Varias respuestas válidas')], default=0)),
                ('num_question', models.PositiveIntegerField(default=1)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('activation_code', models.CharField(blank=True, max_length=6, null=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('active', models.BooleanField(default=False)),
                ('visibility', models.PositiveIntegerField(choices=[(0, 'Público'), (1, 'Usuarios matriculados'), (2, 'Usuarios con invitación'), (3, 'Solo visible para el propietario')], default=0)),
                ('created_on', models.DateTimeField(blank=True)),
                ('gamificado', models.BooleanField(default=False)),
                ('autogenerate_questions', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='user.UserProfile')),
                ('question', models.ManyToManyField(related_name='tests', to='question.Question')),
                ('subject', smart_selects.db_fields.ChainedForeignKey(chained_field='owner', chained_model_field='teacher', on_delete=django.db.models.deletion.CASCADE, related_name='tests', show_all=True, to='subject.Subject', verbose_name='Asignatura')),
                ('subtopic', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field='topic', chained_model_field='topic', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='topic.Subtopic', verbose_name='Subtema (opcional)')),
                ('topic', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field='subject', chained_model_field='subject', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='topic.Topic', verbose_name='Tema (opcional)')),
            ],
        ),
        migrations.CreateModel(
            name='TestDone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realization_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('presented', models.DateTimeField(blank=True, null=True)),
                ('passed', models.BooleanField(default=False)),
                ('IP', models.GenericIPAddressField(null=True)),
                ('result', models.IntegerField(default=0)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testsdone', to='user.UserProfile')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testsdonetest', to='test.Test')),
            ],
        ),
    ]
